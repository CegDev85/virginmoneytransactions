{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/virgin_money/transactions/client/src/components/CategorySelect.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport CategoryDetail from '../components/CategoryDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategorySelect = ({\n  selectedCategory,\n  setSelectedCategory,\n  transactions\n}) => {\n  _s();\n\n  const [transactionHistory, setTransactionHistory] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(\"*select a year above*\");\n  let topSpendInitialse = 0;\n  let lowSpendInitialise = 0; // const [lowestSpend, setLowestSpend] = useState(0)\n  // const [highestSpend ,setHighestSpend] =useState(0) having issues with too many re rendors so potentially cant use this here\n\n  useEffect(() => {\n    searchTransactions();\n  }, [selectedCategory]);\n\n  const handleChange = function (event) {\n    let chosenCategory = event.target.value;\n    setSelectedCategory(chosenCategory);\n  };\n\n  const searchTransactions = () => {\n    const foundTransactions = transactions.filter(transaction => transaction.category === selectedCategory);\n    setTransactionHistory(foundTransactions);\n  };\n\n  const transactionTotal = () => {\n    let totalTransaction = 0;\n\n    for (let transaction of transactionHistory) {\n      totalTransaction += transaction.amount;\n    }\n\n    return totalTransaction;\n  };\n\n  const transactionMonthly = () => {\n    let monthlyTotal = transactionTotal() / 12;\n    return monthlyTotal.toFixed();\n  };\n\n  const handleYear = function (event) {\n    let chosenYear = event.target.value;\n    setSelectedYear(chosenYear);\n  };\n\n  const spendsForYear = () => {\n    let yearTotal = 0;\n    let numList = [];\n\n    for (let transaction of transactionHistory) {\n      if (transaction.date.includes(selectedYear)) {\n        yearTotal += transaction.amount;\n        numList.push(yearTotal);\n        yearTotal -= yearTotal;\n      }\n    }\n\n    return numList;\n  };\n\n  const highestSpendForYear = () => {\n    const topSpend = Math.max(...spendsForYear());\n    return topSpend;\n  };\n\n  const lowestSpendForYear = () => {\n    const lowSpend = Math.min(...spendsForYear());\n    return lowSpend;\n  };\n\n  const handleTotal = () => {\n    topSpendInitialse = highestSpendForYear();\n    return topSpendInitialse;\n  };\n\n  const twoCalls = () => {\n    handleYear();\n    handleTotal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"category\",\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            onChange: handleChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select a category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Groceries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"My Monthly DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Spend for \", selectedCategory, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\xA3\", transactionTotal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your monthly average spend for \", selectedCategory, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\xA3\", transactionMonthly()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 70\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategoryDetail, {\n      transactionHistory: transactionHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Highest and Lowest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"Year\",\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"year\",\n            onChange: twoCalls,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select a Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2020\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2019\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your highest spend in \", selectedYear, \" is \\xA3\", topSpendInitialse]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your lowest spend in \", selectedYear, \" is \\xA3\", lowestSpendForYear()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategorySelect, \"YOCMZB/Cz4EcCpDUIG7Zfjm0v/o=\");\n\n_c = CategorySelect;\nexport default CategorySelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategorySelect\");","map":{"version":3,"sources":["/Users/student/Desktop/virgin_money/transactions/client/src/components/CategorySelect.js"],"names":["React","useState","useEffect","CategoryDetail","CategorySelect","selectedCategory","setSelectedCategory","transactions","transactionHistory","setTransactionHistory","selectedYear","setSelectedYear","topSpendInitialse","lowSpendInitialise","searchTransactions","handleChange","event","chosenCategory","target","value","foundTransactions","filter","transaction","category","transactionTotal","totalTransaction","amount","transactionMonthly","monthlyTotal","toFixed","handleYear","chosenYear","spendsForYear","yearTotal","numList","date","includes","push","highestSpendForYear","topSpend","Math","max","lowestSpendForYear","lowSpend","min","handleTotal","twoCalls"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,gBAAD;AAAmBC,EAAAA,mBAAnB;AAAwCC,EAAAA;AAAxC,CAAD,KAA2D;AAAA;;AAE9E,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,uBAAD,CAAhD;AACA,MAAIW,iBAAiB,GAAG,CAAxB;AACA,MAAIC,kBAAkB,GAAG,CAAzB,CAL8E,CAM9E;AACA;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,kBAAkB;AACrB,GAFQ,EAEP,CAACT,gBAAD,CAFO,CAAT;;AAKA,QAAMU,YAAY,GAAG,UAASC,KAAT,EAAgB;AAC7B,QAAIC,cAAc,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAlC;AACAb,IAAAA,mBAAmB,CAACW,cAAD,CAAnB;AAEP,GAJD;;AAOA,QAAMH,kBAAkB,GAAG,MAAM;AAC7B,UAAMM,iBAAiB,GAAGb,YAAY,CAACc,MAAb,CAAoBC,WAAW,IAAIA,WAAW,CAACC,QAAZ,KAAyBlB,gBAA5D,CAA1B;AACAI,IAAAA,qBAAqB,CAACW,iBAAD,CAArB;AACH,GAHD;;AAKA,QAAMI,gBAAgB,GAAG,MAAM;AAC3B,QAAIC,gBAAgB,GAAG,CAAvB;;AACA,SAAI,IAAIH,WAAR,IAAuBd,kBAAvB,EAA0C;AACtCiB,MAAAA,gBAAgB,IAAIH,WAAW,CAACI,MAAhC;AACH;;AACD,WAAOD,gBAAP;AACH,GAND;;AAQA,QAAME,kBAAkB,GAAG,MAAM;AAC7B,QAAIC,YAAY,GAAGJ,gBAAgB,KAAK,EAAxC;AACA,WAAOI,YAAY,CAACC,OAAb,EAAP;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAG,UAASd,KAAT,EAAgB;AAC/B,QAAIe,UAAU,GAAGf,KAAK,CAACE,MAAN,CAAaC,KAA9B;AACAR,IAAAA,eAAe,CAACoB,UAAD,CAAf;AACH,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAI,IAAIZ,WAAR,IAAuBd,kBAAvB,EAA0C;AACtC,UAAGc,WAAW,CAACa,IAAZ,CAAiBC,QAAjB,CAA0B1B,YAA1B,CAAH,EAA2C;AACvCuB,QAAAA,SAAS,IAAIX,WAAW,CAACI,MAAzB;AACAQ,QAAAA,OAAO,CAACG,IAAR,CAAaJ,SAAb;AACAA,QAAAA,SAAS,IAAIA,SAAb;AACH;AACJ;;AACD,WAAOC,OAAP;AACH,GAXD;;AAaA,QAAMI,mBAAmB,GAAG,MAAM;AAC9B,UAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGT,aAAa,EAAzB,CAAjB;AACA,WAAOO,QAAP;AAEH,GAJD;;AAMA,QAAMG,kBAAkB,GAAG,MAAM;AAC7B,UAAMC,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAAS,GAAGZ,aAAa,EAAzB,CAAjB;AACA,WAAOW,QAAP;AACH,GAHD;;AAKA,QAAME,WAAW,GAAG,MAAM;AACvBjC,IAAAA,iBAAiB,GAAG0B,mBAAmB,EAAvC;AACA,WAAO1B,iBAAP;AACF,GAHD;;AAKA,QAAMkC,QAAQ,GAAG,MAAM;AACnBhB,IAAAA,UAAU;AACVe,IAAAA,WAAW;AACd,GAHD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAA,6BACI;AAAA,+BACI;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI;AAAO,YAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,IAAI,EAAC,UAAb;AAAwB,YAAA,QAAQ,EAAE9B,YAAlC;AAAgD,YAAA,QAAQ,MAAxD;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAA,qCAAoBV,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,eAc8C;AAAA,yBAAKmB,gBAAgB,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAd9C,eAeI;AAAA,oDAAmCnB,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAe6D;AAAA,yBAAKsB,kBAAkB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAf7D,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAiBI,QAAC,cAAD;AAAgB,MAAA,kBAAkB,EAAEnB;AAApC;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAkBI;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAoBI;AAAA,6BACI;AAAA,+BACI;AAAA,kCACI;AAAO,YAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,IAAI,EAAC,MAAb;AAAoB,YAAA,QAAQ,EAAEsC,QAA9B;AAAwC,YAAA,QAAQ,MAAhD;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApBJ,eAgCI;AAAA,2CAA0BpC,YAA1B,cAA6CE,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCJ,eAiCI;AAAA,0CAAyBF,YAAzB,cAA4CgC,kBAAkB,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CAzHD;;GAAMtC,c;;KAAAA,c;AA2HN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport CategoryDetail from '../components/CategoryDetail'\n\n\n\nconst CategorySelect = ({selectedCategory, setSelectedCategory, transactions}) => {\n\n    const [transactionHistory, setTransactionHistory] = useState([])\n    const [selectedYear, setSelectedYear] = useState(\"*select a year above*\")\n    let topSpendInitialse = 0\n    let lowSpendInitialise = 0\n    // const [lowestSpend, setLowestSpend] = useState(0)\n    // const [highestSpend ,setHighestSpend] =useState(0) having issues with too many re rendors so potentially cant use this here\n\n    useEffect(() => {\n        searchTransactions()\n    },[selectedCategory])\n      \n\n    const handleChange = function(event) {\n            let chosenCategory = event.target.value;\n            setSelectedCategory(chosenCategory)\n        \n    }\n\n\n    const searchTransactions = () => {\n        const foundTransactions = transactions.filter(transaction => transaction.category === selectedCategory)\n        setTransactionHistory(foundTransactions)\n    }\n\n    const transactionTotal = () => {\n        let totalTransaction = 0;\n        for(let transaction of transactionHistory){\n            totalTransaction += transaction.amount\n        }\n        return totalTransaction\n    }\n\n    const transactionMonthly = () => {\n        let monthlyTotal = transactionTotal() / 12;\n        return monthlyTotal.toFixed()\n    }\n\n    const handleYear = function(event) {\n        let chosenYear = event.target.value;\n        setSelectedYear(chosenYear)\n    }\n\n    const spendsForYear = () => {\n        let yearTotal = 0;\n        let numList = [];\n        for(let transaction of transactionHistory){\n            if(transaction.date.includes(selectedYear)){\n                yearTotal += transaction.amount\n                numList.push(yearTotal)\n                yearTotal -= yearTotal\n            }\n        }\n        return numList\n    }\n\n    const highestSpendForYear = () => {\n        const topSpend = Math.max(...spendsForYear())\n        return topSpend\n        \n    }\n\n    const lowestSpendForYear = () => {\n        const lowSpend = Math.min(...spendsForYear())\n        return lowSpend\n    }\n\n    const handleTotal = () => {\n       topSpendInitialse = highestSpendForYear() \n       return topSpendInitialse\n    }\n\n    const twoCalls = () => {\n        handleYear();\n        handleTotal()\n    }\n\n    \n    \n\n    return (\n        <div className=\"category-select\">\n            <form>\n                <ul>\n                    <li>\n                    <h2>Statistics</h2>\n                        <label for=\"category\">Category:</label>\n                        <select name=\"category\" onChange={handleChange} required>\n                            <option>Select a category</option>\n                            <option>Groceries</option>\n                            <option>My Monthly DD</option>\n                        </select> \n                    </li>\n                </ul>\n            </form>\n            <p>Total Spend for {selectedCategory}:</p><p>£{transactionTotal()}</p>\n            <p>Your monthly average spend for {selectedCategory}:</p><p>£{transactionMonthly()}</p>\n            <h2>History</h2>\n            <CategoryDetail transactionHistory={transactionHistory}/>\n            <br></br>\n            <h2>Highest and Lowest</h2>\n            <form>\n                <ul>\n                    <li>\n                        <label for=\"Year\">Year:</label>\n                        <select name=\"year\" onChange={twoCalls} required>\n                            <option>Select a Year</option>\n                            <option>2020</option>\n                            <option>2019</option>\n                        </select>\n                    </li>\n                </ul>\n            </form>\n            <p>Your highest spend in {selectedYear} is £{topSpendInitialse}</p>\n            <p>Your lowest spend in {selectedYear} is £{lowestSpendForYear()}</p>\n\n\n            \n        </div>\n    )\n}\n\nexport default CategorySelect\n"]},"metadata":{},"sourceType":"module"}